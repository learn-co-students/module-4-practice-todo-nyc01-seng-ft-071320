{"ast":null,"code":"var _jsxFileName = \"/Users/Josh/Flatiron/mod-4/practice_labs/module-4-practice-todo-nyc01-seng-ft-071320/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { CATEGORIES } from './data';\nimport TasksContainer from './containers/TasksContainer';\nimport CategoryContainer from './containers/CategoryContainer';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        text: 'Buy rice',\n        category: 'Food'\n      }, {\n        text: 'Save a tenner',\n        category: 'Money'\n      }, {\n        text: 'Build a todo app',\n        category: 'Code'\n      }, {\n        text: 'Build todo API',\n        category: 'Code'\n      }, {\n        text: 'Get an ISA',\n        category: 'Money'\n      }, {\n        text: 'Cook rice',\n        category: 'Food'\n      }, {\n        text: 'Tidy house',\n        category: 'Misc'\n      }],\n      categories: CATEGORIES,\n      currentCategory: \"All\",\n      filteredTasks: []\n    };\n\n    this.categorySelection = category => {\n      console.log(category.name);\n\n      if (category.name !== \"All\") {\n        const newArray = this.state.tasks;\n        const filtered = newArray.filter(task => task.category === category.name);\n        this.setState(() => ({\n          currentCategory: category.name,\n          filteredTasks: filtered\n        }));\n      } else if (category.name === \"All\") {\n        this.setState(() => ({\n          currentCategory: \"All\"\n        }));\n      }\n    };\n\n    this.deleteTask = taskObj => {\n      const newArray = this.state.tasks;\n      const arrayAfterDelete = newArray.filter(task => task.text !== taskObj.text);\n      this.setState(() => ({\n        tasks: arrayAfterDelete\n      }));\n    };\n\n    this.createTask = newTask => {};\n  }\n\n  componentDidMount() {// console.log(CATEGORIES)\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"My tasks\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Category Filters\"), /*#__PURE__*/React.createElement(CategoryContainer, {\n      cats: this.state.categories,\n      catSelectHandler: this.categorySelection,\n      selectedCategory: this.state.currentCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TasksContainer, {\n      tasks: this.state.currentCategory === \"All\" ? this.state.tasks : this.state.filteredTasks,\n      deleteHandler: this.deleteTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;\n/* \nadd table?\n\nadd filter buttons\n        when you click each button, they filter the tasks list\n\nhow to change button colors when selecting a different button\n    kind of like the radio buttons\n      add state to the parent container\n        add a property called \n*/","map":{"version":3,"sources":["/Users/Josh/Flatiron/mod-4/practice_labs/module-4-practice-todo-nyc01-seng-ft-071320/src/App.js"],"names":["React","CATEGORIES","TasksContainer","CategoryContainer","App","Component","state","tasks","text","category","categories","currentCategory","filteredTasks","categorySelection","console","log","name","newArray","filtered","filter","task","setState","deleteTask","taskObj","arrayAfterDelete","createTask","newTask","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { CATEGORIES } from './data'\nimport TasksContainer from './containers/TasksContainer'\nimport CategoryContainer from './containers/CategoryContainer';\n\nclass App extends React.Component {\n\n  state = {\n    tasks: [\n      {\n        text: 'Buy rice',\n        category: 'Food'\n      },\n      {\n        text: 'Save a tenner',\n        category: 'Money'\n      },\n      {\n        text: 'Build a todo app',\n        category: 'Code'\n      },\n      {\n        text: 'Build todo API',\n        category: 'Code'\n      },\n      {\n        text: 'Get an ISA',\n        category: 'Money'\n      },\n      {\n        text: 'Cook rice',\n        category: 'Food'\n      },\n      {\n        text: 'Tidy house',\n        category: 'Misc'\n      }\n    ],\n    categories: CATEGORIES,\n    currentCategory: \"All\",\n    filteredTasks: []\n  }\n\n  componentDidMount(){\n    // console.log(CATEGORIES)\n  }\n\n  categorySelection = (category) => {\n    console.log(category.name)\n\n    if(category.name !== \"All\"){\n      const newArray = this.state.tasks\n      const filtered = newArray.filter(task => task.category === category.name)\n      this.setState(()=>({\n        currentCategory: category.name,\n        filteredTasks: filtered\n      }))\n    } else if(category.name === \"All\") {\n      this.setState(()=>({\n        currentCategory: \"All\"\n      }))\n    }\n    \n  }\n\n  deleteTask = (taskObj) => {\n    const newArray = this.state.tasks\n    const arrayAfterDelete = newArray.filter(task => task.text !== taskObj.text)\n    this.setState(()=>({\n      tasks: arrayAfterDelete\n    }))\n  }\n\n  createTask = (newTask) => {\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h2>My tasks</h2>\n        <h5>Category Filters</h5>\n        <CategoryContainer cats={this.state.categories} catSelectHandler={this.categorySelection} selectedCategory={this.state.currentCategory} />\n        <TasksContainer tasks={this.state.currentCategory === \"All\" ? this.state.tasks : this.state.filteredTasks} deleteHandler={this.deleteTask} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n\n/* \nadd table?\n\nadd filter buttons\n        when you click each button, they filter the tasks list\n\nhow to change button colors when selecting a different button\n    kind of like the radio buttons\n      add state to the parent container\n        add a property called \n*/"]},"metadata":{},"sourceType":"module"}