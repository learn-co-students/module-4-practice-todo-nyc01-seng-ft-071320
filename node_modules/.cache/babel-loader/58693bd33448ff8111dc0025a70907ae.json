{"ast":null,"code":"var _jsxFileName = \"/Users/jakemills/Development/Flatiron/Code/Mod4/Challenge/module-4-practice-todo-nyc01-seng-ft-071320/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport CategoryContainer from './Containers/CategoryContainer';\nimport TaskContainer from './Containers/TaskContainer';\nimport { CATEGORIES } from './data';\nimport Form from './Components/Form';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        text: 'Buy rice',\n        category: 'Food'\n      }, {\n        text: 'Save a tenner',\n        category: 'Money'\n      }, {\n        text: 'Build a todo app',\n        category: 'Code'\n      }, {\n        text: 'Build todo API',\n        category: 'Code'\n      }, {\n        text: 'Get an ISA',\n        category: 'Money'\n      }, {\n        text: 'Cook rice',\n        category: 'Food'\n      }, {\n        text: 'Tidy house',\n        category: 'Misc'\n      }],\n      selectedButton: 'All'\n    };\n\n    this.buttonSelector = e => {\n      e.persist();\n      this.setState(() => ({\n        selectedButton: e.target.textContent\n      }));\n    };\n\n    this.categoryFilter = () => {\n      if (this.state.selectedButton === 'All') {\n        return this.state.tasks;\n      }\n\n      return this.state.tasks.filter(task => task.category === this.state.selectedButton);\n    };\n\n    this.addNewTask = newTask => {\n      const newTasksArray = [...this.state.tasks, newTask];\n      this.setState(() => ({\n        tasks: newTasksArray\n      }));\n    };\n\n    this.removeTask = e => {\n      const newTasksArray = [...this.state.tasks];\n      const found = newTasksArray.find(element => element.text === e.target.previousElementSibling.textContent);\n      const index = newTasksArray.indexOf(found);\n      console.log(newTasksArray.splice(found, 1)); // this.setState(() => ({\n      //   tasks: newTasksArray.splice(0, found),\n      // }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"My tasks\"), /*#__PURE__*/React.createElement(CategoryContainer, {\n      categories: CATEGORIES,\n      buttonSelector: this.buttonSelector,\n      selectedButton: this.state.selectedButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Tasks\"), /*#__PURE__*/React.createElement(Form, {\n      addNewTask: this.addNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TaskContainer, {\n      tasks: this.categoryFilter(),\n      removeTask: this.removeTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jakemills/Development/Flatiron/Code/Mod4/Challenge/module-4-practice-todo-nyc01-seng-ft-071320/src/App.js"],"names":["React","CategoryContainer","TaskContainer","CATEGORIES","Form","App","Component","state","tasks","text","category","selectedButton","buttonSelector","e","persist","setState","target","textContent","categoryFilter","filter","task","addNewTask","newTask","newTasksArray","removeTask","found","find","element","previousElementSibling","index","indexOf","console","log","splice","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADK,EAKL;AACED,QAAAA,IAAI,EAAE,eADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OALK,EASL;AACED,QAAAA,IAAI,EAAE,kBADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OATK,EAaL;AACED,QAAAA,IAAI,EAAE,gBADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAbK,EAiBL;AACED,QAAAA,IAAI,EAAE,YADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAjBK,EAqBL;AACED,QAAAA,IAAI,EAAE,WADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OArBK,EAyBL;AACED,QAAAA,IAAI,EAAE,YADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAzBK,CADD;AA+BNC,MAAAA,cAAc,EAAE;AA/BV,KADwB;;AAAA,SAmChCC,cAnCgC,GAmCdC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,OAAF;AACA,WAAKC,QAAL,CAAc,OAAO;AACnBJ,QAAAA,cAAc,EAAEE,CAAC,CAACG,MAAF,CAASC;AADN,OAAP,CAAd;AAGD,KAxC+B;;AAAA,SA0ChCC,cA1CgC,GA0Cf,MAAM;AACrB,UAAI,KAAKX,KAAL,CAAWI,cAAX,KAA8B,KAAlC,EAAyC;AACvC,eAAO,KAAKJ,KAAL,CAAWC,KAAlB;AACD;;AACD,aAAO,KAAKD,KAAL,CAAWC,KAAX,CAAiBW,MAAjB,CACJC,IAAD,IAAUA,IAAI,CAACV,QAAL,KAAkB,KAAKH,KAAL,CAAWI,cADlC,CAAP;AAGD,KAjD+B;;AAAA,SAmDhCU,UAnDgC,GAmDlBC,OAAD,IAAa;AACxB,YAAMC,aAAa,GAAG,CAAC,GAAG,KAAKhB,KAAL,CAAWC,KAAf,EAAsBc,OAAtB,CAAtB;AACA,WAAKP,QAAL,CAAc,OAAO;AACnBP,QAAAA,KAAK,EAAEe;AADY,OAAP,CAAd;AAGD,KAxD+B;;AAAA,SA0DhCC,UA1DgC,GA0DlBX,CAAD,IAAO;AAClB,YAAMU,aAAa,GAAG,CAAC,GAAG,KAAKhB,KAAL,CAAWC,KAAf,CAAtB;AACA,YAAMiB,KAAK,GAAGF,aAAa,CAACG,IAAd,CACXC,OAAD,IAAaA,OAAO,CAAClB,IAAR,KAAiBI,CAAC,CAACG,MAAF,CAASY,sBAAT,CAAgCX,WADlD,CAAd;AAGA,YAAMY,KAAK,GAAGN,aAAa,CAACO,OAAd,CAAsBL,KAAtB,CAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,aAAa,CAACU,MAAd,CAAqBR,KAArB,EAA4B,CAA5B,CAAZ,EANkB,CAOlB;AACA;AACA;AACD,KApE+B;AAAA;;AAsEhCS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,iBAAD;AACE,MAAA,UAAU,EAAE/B,UADd;AAEE,MAAA,cAAc,EAAE,KAAKS,cAFvB;AAGE,MAAA,cAAc,EAAE,KAAKL,KAAL,CAAWI,cAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKU,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAE,KAAKH,cAAL,EADT;AAEE,MAAA,UAAU,EAAE,KAAKM,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAPF,CADF;AAkBD;;AAzF+B;;AA4FlC,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport CategoryContainer from './Containers/CategoryContainer';\nimport TaskContainer from './Containers/TaskContainer';\nimport { CATEGORIES } from './data';\nimport Form from './Components/Form';\n\nclass App extends React.Component {\n  state = {\n    tasks: [\n      {\n        text: 'Buy rice',\n        category: 'Food',\n      },\n      {\n        text: 'Save a tenner',\n        category: 'Money',\n      },\n      {\n        text: 'Build a todo app',\n        category: 'Code',\n      },\n      {\n        text: 'Build todo API',\n        category: 'Code',\n      },\n      {\n        text: 'Get an ISA',\n        category: 'Money',\n      },\n      {\n        text: 'Cook rice',\n        category: 'Food',\n      },\n      {\n        text: 'Tidy house',\n        category: 'Misc',\n      },\n    ],\n    selectedButton: 'All',\n  };\n\n  buttonSelector = (e) => {\n    e.persist();\n    this.setState(() => ({\n      selectedButton: e.target.textContent,\n    }));\n  };\n\n  categoryFilter = () => {\n    if (this.state.selectedButton === 'All') {\n      return this.state.tasks;\n    }\n    return this.state.tasks.filter(\n      (task) => task.category === this.state.selectedButton\n    );\n  };\n\n  addNewTask = (newTask) => {\n    const newTasksArray = [...this.state.tasks, newTask];\n    this.setState(() => ({\n      tasks: newTasksArray,\n    }));\n  };\n\n  removeTask = (e) => {\n    const newTasksArray = [...this.state.tasks];\n    const found = newTasksArray.find(\n      (element) => element.text === e.target.previousElementSibling.textContent\n    );\n    const index = newTasksArray.indexOf(found);\n    console.log(newTasksArray.splice(found, 1));\n    // this.setState(() => ({\n    //   tasks: newTasksArray.splice(0, found),\n    // }));\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <h2>My tasks</h2>\n        <CategoryContainer\n          categories={CATEGORIES}\n          buttonSelector={this.buttonSelector}\n          selectedButton={this.state.selectedButton}\n        />\n        <div className='tasks'>\n          <h5>Tasks</h5>\n          <Form addNewTask={this.addNewTask} />\n          <TaskContainer\n            tasks={this.categoryFilter()}\n            removeTask={this.removeTask}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}